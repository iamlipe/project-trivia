{"version":3,"sources":["assets/image/world_1.png","assets/image/warning.svg","assets/image/trivia.png","assets/image/config.svg","assets/image/header.svg","assets/image/brain_1.png","assets/image/stop.svg","assets/image/0.svg","assets/image/1.svg","assets/image/2.svg","assets/image/home.svg","assets/image/music.svg","assets/image/x.svg","assets/image/brain_2.png","assets/image/world_2.png","assets/midia/sneaky.mp3","services/fetchAnswers.js","actions/index.js","actions/actionTypes.js","pages/Login.js","components/Header.js","components/GameScreen.js","components/ListPlayerRanking.js","components/Navegation.js","pages/Game.js","pages/Settings.js","pages/Feedback.js","pages/Ranking.js","App.js","reducers/login.js","reducers/game.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","FetchAPI","fetch","localStorage","getItem","then","response","json","ok","Promise","resolve","reject","setTimer","timer","answer","type","Login","state","email","name","valid","validLogin","bind","handleForm","requestToken","handleHash","buttonDisabled","this","props","getAPI","sendFormLogin","player","document","getElementById","value","assertions","score","gravatarEmail","ranking","JSON","parse","setItem","stringify","returnedPromise","returnedJson","token","querySelector","play","target","setState","isValidEmail","match","isValidName","length","encryptado","md5","toString","className","data-testid","disabled","src","world","alt","warning","trivia","placeholder","id","onChange","to","pathname","onClick","config","defaultValue","React","Component","connect","dispatch","payload","FetchingSUCESS","ActionEmail","Header","waveHeader","color","point","wave","game","user","answers","loading","isLoading","GameScreen","indexQuestion","isCorrect","isIncorrect","renderGame","handleBotao","handleClick","nextAnswers","mudarState","handleClickQuestion","renderButtonWithLink","renderButtonWithoutLink","savePlayerRanking","newPlayer","param","pergunta","setPoint","answerDifficulty","difficulty","easy","medium","hard","TIMER","setInterval","reduxTimer","question","clearInterval","Array","from","getElementsByClassName","forEach","item","parseFloat","prevState","index","key","setScore","reset","newPlayerRank","picture","newRankig","category","correct_answer","incorrect_answers","map","brain","stop","PointSet","ListPlayerRanking","podium","medal0","medal1","medal2","data","renderMedal","Navegation","song","setSong","audio","muted","pause","style","display","home","music","x","Game","location","Settings","Feedback","handleFeedback","handleRanking","handlePlayAgain","handleButtRanking","Ranking","sort","a","b","App","basename","path","component","exact","loop","autoPlay","sneaky","INITIAL_STATE","action","INITIAL_API_STATE","erro","Fetching","results","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render"],"mappings":"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","file":"static/js/main.2f55a67c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/world_1.bda62d85.png\";","module.exports = __webpack_public_path__ + \"static/media/warning.840ae09f.svg\";","module.exports = __webpack_public_path__ + \"static/media/trivia.e323612a.png\";","module.exports = __webpack_public_path__ + \"static/media/config.cb6edcd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/header.e48c2700.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain_1.5d322e64.png\";","module.exports = __webpack_public_path__ + \"static/media/stop.31882b3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/0.d202c301.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.d9ce77c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.d3d99502.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.6f564c6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/music.989f7fe9.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.e00a0778.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain_2.4c3b6e13.png\";","module.exports = __webpack_public_path__ + \"static/media/world_2.ecb3974b.png\";","module.exports = __webpack_public_path__ + \"static/media/sneaky.2823b103.mp3\";","const FetchAPI = () => (\n  fetch(`https://opentdb.com/api.php?amount=5&token=${localStorage.getItem('token')}`)\n    .then((response) => (\n      response\n        .json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ))\n);\n\nexport default FetchAPI;\n","import FetchAPI from '../services/fetchAnswers';\nimport {\n  getUser,\n  fetchAPI,\n  fetchAPIERROR,\n  fetchAPISUCESS,\n  SET_TIMER,\n  SET_POINT,\n  RESET,\n} from './actionTypes';\n\nexport const ActionEmail = (email, name) => ({\n  type: getUser,\n  email,\n  name,\n});\n\nexport const Fetching = () => ({\n  type: fetchAPI,\n});\n\nexport const FetchingSUCESS = (payload) => ({\n  type: fetchAPISUCESS,\n  payload,\n});\n\nexport const FetchingERROR = () => ({\n  type: fetchAPIERROR,\n});\n\nexport const FecthAPI = () => (dispatch) => {\n  dispatch(Fetching());\n  return FetchAPI()\n    .then(\n      (payload) => dispatch(FetchingSUCESS(payload)),\n      () => dispatch(fetchAPIERROR()),\n    );\n};\n\nexport const setTimer = (timer, answer) => ({\n  type: SET_TIMER,\n  timer,\n  answer,\n});\n\nexport const PointSet = (point) => ({\n  type: SET_POINT,\n  point,\n});\n\nexport const resetStore = () => ({\n  type: RESET,\n});\n","// Coloque aqui suas actions\nexport const getUser = 'GET_USER';\nexport const validEmail = 'VALID_EMAIL';\nexport const fetchAPISUCESS = 'FETCH_API_SUCESS';\nexport const fetchAPIERROR = 'FETCH_API_ERROR';\nexport const fetchAPI = 'fetchAPI';\nexport const SET_TIMER = 'SET_TIMER';\nexport const SET_POINT = 'SET_POINT';\nexport const RESET = 'RESET';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { ActionEmail, FecthAPI } from '../actions';\n\nimport world from '../assets/image/world_1.png';\nimport warning from '../assets/image/warning.svg';\nimport trivia from '../assets/image/trivia.png';\nimport config from '../assets/image/config.svg';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      valid: false,\n    };\n    this.validLogin = this.validLogin.bind(this);\n    this.handleForm = this.handleForm.bind(this);\n    this.requestToken = this.requestToken.bind(this);\n    this.handleHash = this.handleHash.bind(this);\n    this.buttonDisabled = this.buttonDisabled.bind(this);\n  }\n\n  async requestToken() {\n    const { getAPI, sendFormLogin } = this.props;\n    const { email, name } = this.state;\n    sendFormLogin(email, name);\n    const state = {\n      player: {\n        name: document.getElementById('name').value,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: document.getElementById('email').value,\n      },\n      ranking: localStorage.getItem('state') !== null\n        ? JSON.parse(localStorage.getItem('state')).ranking\n        : [],\n    };\n    localStorage.setItem('state', JSON.stringify(state));\n    this.handleHash();\n    const returnedPromise = await\n    fetch('https://opentdb.com/api_token.php?command=request');\n    const returnedJson = await returnedPromise.json();\n    localStorage.setItem('token', returnedJson.token);\n    document.querySelector('audio').play();\n    getAPI();\n  }\n\n  handleForm({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n    this.validLogin();\n  }\n\n  validLogin() {\n    const { email, name } = this.state;\n    const REGEX_EMAIL = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n    const REGEX_NAME = 1;\n    const isValidEmail = email.match(REGEX_EMAIL) !== null;\n    const isValidName = name.length >= REGEX_NAME;\n    if (isValidEmail === true && isValidName === true) {\n      this.setState({\n        valid: true,\n      });\n    }\n  }\n\n  handleHash() {\n    const { email } = this.state;\n    const encryptado = md5(email).toString();\n    localStorage.setItem('hash', encryptado);\n  }\n\n  buttonDisabled() {\n    return (\n      <input\n        className=\"disabled\"\n        type=\"Button\"\n        value=\"jogar\"\n        data-testid=\"btn-play\"\n        disabled\n      />\n    );\n  }\n\n  render() {\n    const { valid, name } = this.state;\n    return (\n      <div className=\"container-login\">\n        <img className=\"world-login\" src={ world } alt=\"world\" />\n        <img className=\"warning-login\" src={ warning } alt=\"warning\" />\n        <img className=\"trivia-login\" src={ trivia } alt=\"trivia\" />\n        <div className=\"form-login\">\n          <input\n            placeholder=\"email\"\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            data-testid=\"input-gravatar-email\"\n            onChange={ this.handleForm }\n          />\n          <input\n            placeholder=\"name\"\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            onChange={ this.handleForm }\n          />\n          <Link to={ { pathname: '/game', state: { name } } }>\n            {valid ? <input\n              className=\"enabled\"\n              type=\"Button\"\n              onClick={ this.requestToken }\n              value=\"jogar\"\n              data-testid=\"btn-play\"\n            />\n              : this.buttonDisabled() }\n          </Link>\n        </div>\n        <Link className=\"config-login\" to=\"/settings\">\n          <img src={ config } alt=\"config\" />\n          <input type=\"Button\" defaultValue=\"Configuracão\" data-testid=\"btn-settings\" />\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAPI: () => dispatch(FecthAPI()),\n  sendFormLogin: (email, name) => dispatch(ActionEmail(email, name)),\n});\n\nLogin.propTypes = {\n  getAPI: PropTypes.func.isRequired,\n  sendFormLogin: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport wave from '../assets/image/header.svg';\n\nclass Header extends React.Component {\n  render() {\n    const { waveHeader, color, point } = this.props;\n    return (\n      <div className=\"container-header\">\n        <div className=\"content-header\">\n          <div className=\"profile-box\">\n            <img\n              className=\"profile-picture\"\n              data-testid=\"header-profile-picture\"\n              alt=\"img-profile\"\n              src={ `https://www.gravatar.com/avatar/${localStorage.getItem('hash')}` }\n            />\n            <span\n              className={ `header-name ${color}` }\n              data-testid=\"header-player-name\"\n            >\n              {JSON.parse(localStorage.getItem('state')).player.name}\n            </span>\n          </div>\n          <span\n            className={ `header-score ${color}` }\n            data-testid=\"header-score\"\n          >\n            {`score: ${point === 0\n              ? JSON.parse(localStorage.getItem('state')).player.score : point}`}\n          </span>\n        </div>\n        {waveHeader === false ? null : <img className=\"wave\" src={ wave } alt=\"wave\" /> }\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  name: PropTypes.string,\n  answer: PropTypes.shape({\n    answer: PropTypes.shape({}) }),\n}.isRequired;\n\nconst mapStateToProps = ({ game, user }) => ({\n  answers: game.answer,\n  loading: game.isLoading,\n  name: user.name,\n  timer: game.timer,\n  point: game.point,\n});\n\nexport default connect(mapStateToProps, null)(Header);\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setTimer, PointSet, resetStore } from '../actions';\n\nimport brain from '../assets/image/brain_1.png';\nimport stop from '../assets/image/stop.svg';\n\nclass GameScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    const state = localStorage.getItem('state');\n    this.state = {\n      indexQuestion: 0,\n      isCorrect: '',\n      isIncorrect: '',\n      player: JSON.parse(state),\n    };\n    this.renderGame = this.renderGame.bind(this);\n    this.handleBotao = this.handleBotao.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n    this.nextAnswers = this.nextAnswers.bind(this);\n    this.setState = this.setState.bind(this);\n    this.mudarState = this.mudarState.bind(this);\n    this.handleClickQuestion = this.handleClickQuestion.bind(this);\n    this.renderButtonWithLink = this.renderButtonWithLink.bind(this);\n    this.renderButtonWithoutLink = this.renderButtonWithoutLink.bind(this);\n    this.savePlayerRanking = this.savePlayerRanking.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTimer();\n  }\n\n  componentDidUpdate() {\n    const state = localStorage.getItem('state');\n    const { point } = this.props;\n    const newPlayer = {\n      ...JSON.parse(state),\n      player: {\n        ...JSON.parse(state).player,\n        score: point,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(newPlayer));\n  }\n\n  setScore(param) {\n    const { timer, pergunta, setPoint } = this.props;\n    const { indexQuestion } = this.state;\n    const POINTS_CORRECT_ANSWER = 10;\n    const answerDifficulty = pergunta[indexQuestion].difficulty;\n    const arryDifficulty = { easy: 1, medium: 2, hard: 3 };\n    setPoint(param === 'correct'\n      ? POINTS_CORRECT_ANSWER + (timer * arryDifficulty[answerDifficulty])\n      : 0);\n    this.mudarState();\n  }\n\n  setTimer() {\n    const ONE_SECOND = 1000;\n    const TIMER = setInterval(() => {\n      const { loading, reduxTimer, question, timer } = this.props;\n      if (timer <= 0 || question === true) {\n        clearInterval(TIMER);\n        reduxTimer(timer, question);\n        Array.from(document.getElementsByClassName('botao'))\n          .forEach((item) => { item.disabled = true; });\n      } else if (loading === false) {\n        const newTimer = parseFloat(timer) - 1;\n        reduxTimer(newTimer, question);\n      }\n    }, ONE_SECOND);\n  }\n\n  mudarState() {\n    const { point } = this.props;\n    this.setState((prevState) => ({\n      ...prevState,\n      player: parseFloat(prevState.player.point) + point,\n    }));\n  }\n\n  handleBotao(item, index) {\n    const { isIncorrect } = this.state;\n    return (\n      <button\n        data-testid={ `wrong-answer-${index}` }\n        className={ `${isIncorrect} botao` }\n        type=\"button\"\n        value=\"incorrect\"\n        key={ index }\n        onClick={ this.handleClick }\n      >\n        {item}\n      </button>);\n  }\n\n  handleClick({ target: { value } }) {\n    const state = localStorage.getItem('state');\n    const { reduxTimer, timer } = this.props;\n    if (value === 'correct') {\n      this.setState({ isCorrect: value, isIncorrect: 'incorrect' });\n      this.setScore('correct');\n      const newPlayer = {\n        ...JSON.parse(state),\n        player: {\n          ...JSON.parse(state).player,\n          assertions: JSON.parse(state).player.assertions + 1,\n        },\n      };\n      localStorage.setItem('state', JSON.stringify(newPlayer));\n    } else if (value === 'incorrect') {\n      this.setState({ isCorrect: 'correct', isIncorrect: value });\n      this.setScore('incorrect');\n    }\n    reduxTimer(timer, true);\n  }\n\n  handleClickQuestion() {\n    const { reduxTimer } = this.props;\n    this.setState((prevState) => ({\n      indexQuestion: prevState.indexQuestion + 1,\n      isCorrect: '',\n      isIncorrect: '',\n    }));\n    Array.from(document.getElementsByClassName('botao'))\n      .forEach((item) => { item.disabled = false; });\n    const REFRESH_TIMER = 30;\n    reduxTimer(REFRESH_TIMER, false);\n    this.setTimer();\n  }\n\n  nextAnswers() {\n    const { indexQuestion } = this.state;\n    const LIMITER_QUESTION = 4;\n    return (\n      indexQuestion === LIMITER_QUESTION\n        ? this.renderButtonWithLink() : this.renderButtonWithoutLink()\n    );\n  }\n\n  savePlayerRanking() {\n    const { reset } = this.props;\n    const state = localStorage.getItem('state');\n    const newPlayerRank = {\n      name: JSON.parse(state).player.name,\n      score: JSON.parse(state).player.score,\n      picture: `https://www.gravatar.com/avatar/${localStorage.getItem('hash')}`,\n    };\n    const newRankig = {\n      ...JSON.parse(state),\n      ranking: [\n        ...JSON.parse(state).ranking,\n        newPlayerRank,\n      ],\n    };\n    localStorage.setItem('state', JSON.stringify(newRankig));\n    reset();\n  }\n\n  renderButtonWithLink() {\n    return (\n      <Link to=\"/feedback\">\n        <button\n          className=\"next-button\"\n          type=\"button\"\n          data-testid=\"btn-next\"\n          onClick={ this.savePlayerRanking }\n        >\n          Feedback\n        </button>\n      </Link>\n    );\n  }\n\n  renderButtonWithoutLink() {\n    return (\n      <button\n        className=\"next-button\"\n        type=\"button\"\n        onClick={ this.handleClickQuestion }\n        data-testid=\"btn-next\"\n      >\n        Proxima\n      </button>\n    );\n  }\n\n  renderGame() {\n    const { pergunta, question, timer } = this.props;\n    const { indexQuestion, isCorrect } = this.state;\n    return (\n      <div className=\"container-game-screen\">\n        <h5 data-testid=\"question-category\">{pergunta[indexQuestion].category}</h5>\n        <div className=\"question-box\">\n          <h1\n            className=\"question\"\n            data-testid=\"question-text\"\n          >\n            {pergunta[indexQuestion].question}\n          </h1>\n        </div>\n\n        <div className=\"button-box\">\n          <button\n            type=\"button\"\n            className={ `${isCorrect} botao` }\n            data-testid=\"correct-answer\"\n            value=\"correct\"\n            onClick={ this.handleClick }\n          >\n            {pergunta[indexQuestion].correct_answer}\n          </button>\n          {pergunta[indexQuestion].incorrect_answers.map(\n            (item, index) => this.handleBotao(item, index),\n          )}\n        </div>\n        <img className=\"brain\" src={ brain } alt=\"brain\" />\n        <div className=\"box-timer\">\n          <img className=\"stop\" src={ stop } alt=\"stop\" />\n          <span className=\"timer\">{timer}</span>\n        </div>\n        {question === true ? this.nextAnswers() : null}\n      </div>\n    );\n  }\n\n  render() {\n    const { answer: { isLoading } } = this.props;\n    return (\n      <div>\n        {isLoading === true ? <h1>Loading</h1> : this.renderGame()}\n      </div>\n    );\n  }\n}\n\nGameScreen.propTypes = {\n  answer: PropTypes.shape({\n    isLoading: PropTypes.bool,\n    answer: PropTypes.shape({}) }),\n  reduxTimer: PropTypes.func,\n  timer: PropTypes.number,\n  question: PropTypes.bool,\n  loading: PropTypes.bool,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  loading: state.game.isLoading,\n  answer: state.game,\n  timer: state.game.timer,\n  question: state.game.question,\n  pergunta: state.game.answer,\n  point: state.game.point,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reduxTimer: (timer, answer) => dispatch(setTimer(timer, answer)),\n  setPoint: (point) => dispatch(PointSet(point)),\n  reset: () => dispatch(resetStore()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameScreen);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport medal0 from '../assets/image/0.svg';\nimport medal1 from '../assets/image/1.svg';\nimport medal2 from '../assets/image/2.svg';\n\nclass ListPlayerRanking extends React.Component {\n  renderMedal() {\n    const { podium } = this.props;\n    if (podium === 0) {\n      return <img className=\"medal\" src={ medal0 } alt=\"medal\" />;\n    }\n    if (podium === 1) {\n      return <img className=\"medal\" src={ medal1 } alt=\"medal\" />;\n    }\n    if (podium === 2) {\n      return <img className=\"medal\" src={ medal2 } alt=\"medal\" />;\n    }\n  }\n\n  render() {\n    const { data: { name, score, picture } } = this.props;\n    return (\n      <div className=\"list-ranking\">\n        <div className=\"player-info\">\n          <img\n            alt=\"img-profile\"\n            src={ picture }\n          />\n          <span data-testid={ `player-name-${name}` }>{name}</span>\n        </div>\n        <div className=\"medal-box\">\n          { this.renderMedal() }\n        </div>\n        <span\n          className=\"score-ranking\"\n          data-testid={ `player-score-${score}` }\n        >\n          {`SCORE:  ${score}`}\n        </span>\n      </div>\n    );\n  }\n}\n\nListPlayerRanking.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    score: PropTypes.number,\n    picture: PropTypes.string,\n  }),\n}.isRequired;\n\nexport default ListPlayerRanking;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport home from '../assets/image/home.svg';\nimport music from '../assets/image/music.svg';\nimport x from '../assets/image/x.svg';\n\nclass Navegation extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      song: false,\n    };\n    this.setSong = this.setSong.bind(this);\n  }\n\n  setSong() {\n    const { song } = this.state;\n    const audio = document.querySelector('audio');\n    const muted = document.getElementsByClassName('x')[0];\n    this.setState((prevState) => ({\n      song: !prevState.song,\n    }));\n\n    if (song === true) {\n      audio.pause();\n      muted.style.display = 'flex';\n    } else {\n      audio.play();\n      muted.style.display = 'none';\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        <Link to=\"/\">\n          <img src={ home } alt=\"home\" />\n        </Link>\n        <button className=\"music\" onClick={ this.setSong } type=\"button\">\n          <img src={ music } alt=\"music\" />\n          <img className=\"x\" src={ x } alt=\"x\" />\n        </button>\n      </nav>\n    );\n  }\n}\n\nexport default Navegation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTimer } from '../actions';\nimport { Header, GameScreen, Nav } from '../components';\n\nclass Game extends React.Component {\n  render() {\n    const { location: { state: { name } } } = this.props;\n    return (\n      <>\n        <Header name={ name } />\n        <div className=\"container-game\">\n          <GameScreen />\n        </div>\n        <Nav />\n      </>\n    );\n  }\n}\n\nGame.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      name: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ game }) => ({\n  loading: game.isLoading,\n  question: game.question,\n  timer: game.timer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  reduxTimer: (timer, answer) => dispatch(setTimer(timer, answer)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <h1 data-testid=\"settings-title\">Configurações</h1>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Nav } from '../components';\n\nimport brain from '../assets/image/brain_2.png';\n\nclass Feedback extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFeedback = this.handleFeedback.bind(this);\n    this.handleRanking = this.handleRanking.bind(this);\n    this.handlePlayAgain = this.handlePlayAgain.bind(this);\n    this.handleButtRanking = this.handleButtRanking.bind(this);\n  }\n\n  handleFeedback() {\n    const state = localStorage.getItem('state');\n    const THREE = 3;\n    if (JSON.parse(state).player.assertions < THREE) {\n      return (\n        <p\n          className=\"feedback-mensage\"\n          data-testid=\"feedback-text\"\n        >\n          Podia ser melhor...\n        </p>\n      );\n    }\n    if (JSON.parse(state).player.assertions >= THREE) {\n      return (\n        <p\n          className=\"feedback-mensage\"\n          data-testid=\"feedback-text\"\n        >\n          Mandou bem!\n        </p>\n      );\n    }\n  }\n\n  handleRanking() {\n    const state = localStorage.getItem('state');\n    return (\n      <>\n        <p\n          className=\"assertions\"\n          data-testid=\"feedback-total-question\"\n        >\n          { `Acertou ${JSON.parse(state).player.assertions} perguntas`}\n\n        </p>\n        <p\n          className=\"score\"\n          data-testid=\"feedback-total-score\"\n        >\n          {`Você conseguiu ${JSON.parse(state).player.score} pontos`}\n\n        </p>\n      </>\n    );\n  }\n\n  handlePlayAgain() {\n    return (\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n        >\n          jogar\n          <br />\n          novamente\n        </button>\n      </Link>\n    );\n  }\n\n  handleButtRanking() {\n    return (\n      <Link to=\"/ranking\">\n        <button\n          type=\"button\"\n          data-testid=\"btn-ranking\"\n        >\n          Ranking\n        </button>\n      </Link>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Header waveHeader={ false } color=\"black\" />\n        <div className=\"container-feedback\">\n          { this.handleFeedback() }\n          { this.handleRanking() }\n          <img className=\"brain-2\" src={ brain } alt=\"brain\" />\n          <div className=\"button-box\">\n            { this.handlePlayAgain() }\n            { this.handleButtRanking() }\n          </div>\n        </div>\n        <Nav />\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListPlayerRanking, Nav } from '../components';\n\nimport world from '../assets/image/world_2.png';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePlayAgain = this.handlePlayAgain.bind(this);\n  }\n\n  handlePlayAgain() {\n    return (\n      <Link className=\"play-again\" to=\"/\">\n        <button type=\"button\" data-testid=\"btn-go-home\">\n          Jogar\n          <br />\n          {' '}\n          Novamente\n        </button>\n      </Link>\n    );\n  }\n\n  render() {\n    const state = localStorage.getItem('state');\n    return (\n      <div className=\"container-ranking\">\n        <h1 className=\"title-ranking\" data-testid=\"ranking-title\">RANKING</h1>\n        <div className=\"content-list\">\n          {JSON.parse(state).ranking\n            .sort((a, b) => b.score - a.score)\n            .map((item, index) => (<ListPlayerRanking\n              key={ index }\n              data={ item }\n              podium={ index }\n            />))}\n        </div>\n        { this.handlePlayAgain() }\n        <img className=\"world\" src={ world } alt=\"world\" />\n        <Nav />\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nimport sneaky from './assets/midia/sneaky.mp3';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route path=\"/game\" component={ Game } />\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n      <audio loop=\"loop\" autoPlay>\n        <source src={ sneaky } type=\"audio/mp3\" />\n      </audio>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { getUser } from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  email: '',\n  name: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case getUser:\n    return { ...state, email: action.email, name: action.name };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas aos jogos\nimport {\n  fetchAPI,\n  fetchAPIERROR,\n  fetchAPISUCESS,\n  SET_TIMER,\n  SET_POINT,\n  RESET,\n} from '../actions/actionTypes';\n\nconst INITIAL_API_STATE = {\n  isLoading: true,\n  erro: null,\n  answer: {},\n  timer: 30,\n  question: false,\n  point: 0,\n};\n\nconst Fetching = (state = INITIAL_API_STATE, action) => {\n  switch (action.type) {\n  case fetchAPI:\n    return { ...state, isLoading: true };\n\n  case fetchAPISUCESS:\n    return { ...state,\n      isLoading: false,\n      answer: action.payload.results,\n    };\n\n  case fetchAPIERROR:\n    return {\n      ...state,\n      isLoading: false,\n      erro: 'DEU RUIM',\n    };\n\n  case SET_TIMER:\n    return {\n      ...state,\n      timer: action.timer,\n      question: action.answer,\n    };\n\n  case SET_POINT:\n    return {\n      ...state,\n      point: state.point + action.point,\n    };\n\n  case RESET:\n    return {\n      isLoading: true,\n      erro: null,\n      answer: {},\n      timer: 30,\n      question: false,\n      point: 0,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default Fetching;\n","import { combineReducers } from 'redux';\nimport user from './login';\nimport game from './game';\n\nconst rootReducer = combineReducers({ user, game });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './css/main.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}